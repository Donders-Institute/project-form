@using System.Text.Encodings.Web
@using Dccn.ProjectForm.Extensions
@using Dccn.ProjectForm.Models
@using Microsoft.AspNetCore.Routing
@model FormModel

@{
    var section = (ISectionModel) ViewData["Section"];
}

<form asp-route-sectionId="@(section.Id)" id="@Html.Id(section.Id)" class="form-section" method="post"
      data-name="@Html.DisplayName(section.Id)" data-timestamp="@Convert.ToBase64String(Model.Timestamp)"
      data-refresh-url="@Url.Page(null, new { sectionId = section.Id })">
    <div class="card mb-3">
        <div class="card-header d-flex justify-content-between section-header">
            <h1 class="display-4">@Html.DisplayName(section.Id)</h1>
        </div>
        <fieldset class="card-body" disabled="@(!section.CanEdit)">
            @{
                var description = Html.Description(section.Id);
            }
            @if (description != null)
            {
                <p class="card-text">@description</p>
            }
            @await Html.PartialAsync($"Sections/{section.Id}")
        </fieldset>
        <div class="card-footer">
            <div class="form-group">
                @{
                    var comments = section.Id + "." + nameof(ISectionModel.Comments);
                    var attributes = new RouteValueDictionary
                    {
                        {"class", "form-control form-control-sm"},
                        {"placeholder", "Leave a comment here if something in this section requires extra explanation."},
                        {"data-save-on", "change"}
                    };

                    if (!section.CanEdit)
                    {
                        attributes["disabled"] = "disabled";
                    }
                }
                @Html.Label(comments)
                @Html.TextArea(comments, section.Comments, 3, 0, attributes)
            </div>
            <div class="card">
                <div class="card-body bg-light">
                    @if (section.Approvals.Any(a => !a.IsAutoApproved))
                    {
                        var showApprovalButtons = section.Approvals.Any(approvalInfo => approvalInfo.CanApprove || approvalInfo.CanReject)
                                                  && section.Approvals.All(approvalInfo => !approvalInfo.IsSelfApproved);

                        <h5 class="card-title">Approval status</h5>
                        <div class="table-responsive">
                            <table class="table table-sm table-borderless table-hover border rounded w-100" style="border-collapse: separate;">
                                <thead class="bg-light border-bottom">
                                    <tr>
                                        <th>Authority</th>
                                        <th>Role</th>
                                        <th style="width: 20%;">Status</th>
                                        @if (showApprovalButtons)
                                        {
                                            <th style="width: 10%;"></th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                @foreach (var approvalInfo in section.Approvals)
                                {
                                    var status = approvalInfo.Status;

                                    <tr>
                                        <td>
                                            <a href="mailto:@(approvalInfo.AuthorityEmail)?subject=@UrlEncoder.Default.Encode("Project proposal: question")">@Html.DisplayFor(_ => approvalInfo.AuthorityName)</a>
                                        </td>
                                        <td>
                                            @Html.DisplayName(approvalInfo.AuthorityRole)
                                        </td>
                                        <td>
                                            <span class="badge badge-@status.GetColor() w-100">
                                                @Html.DisplayName(status)
                                            </span>
                                        </td>
                                        @if (showApprovalButtons)
                                        {
                                            <td>
                                                <div class="btn-group btn-group-sm w-100">
                                                    <button class="btn btn-outline-danger @if (!approvalInfo.CanReject || approvalInfo.IsSelfApproved) { <text>invisible</text> } w-100" type="button"
                                                            data-toggle="modal" data-target="#confirm-reject-dialog" data-role="@approvalInfo.AuthorityRole" data-section="@(section.Id)">
                                                        <i class="fas fa-thumbs-down"></i>
                                                    </button>
                                                    <button class="btn btn-outline-success @if (!approvalInfo.CanApprove || approvalInfo.IsSelfApproved) { <text>invisible</text> } w-100" type="button"
                                                            data-toggle="modal" data-target="#confirm-approve-dialog" data-role="@approvalInfo.AuthorityRole" data-section="@(section.Id)">
                                                        <i class="fas fa-thumbs-up"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        }
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>
                    }
                    <div class="btn-group float-right">
                        @if (section.CanSubmit)
                        {
                            <button class="btn btn-primary" type="button" data-toggle="modal" data-target="#confirm-submit-dialog" data-section="@(section.Id)">
                                Submit
                            </button>
                        }
                        @if (section.CanRetract)
                        {
                            <button class="btn btn-secondary" type="button" data-toggle="modal" data-target="#confirm-retract-dialog" data-section="@(section.Id)">
                                Retract
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <input asp-for="Timestamp" class="timestamp" type="hidden">
</form>