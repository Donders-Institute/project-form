@page "{proposalId:int}"
@model FormModel
@using Dccn.ProjectForm.Data
@using Dccn.ProjectForm.Models
@using Extensions

@{
    ViewData["Title"] = Model.General.Title;
}

<div class="row">
    <div class="col-auto d-none d-lg-block">
        <div id="section-list" class="list-group">
            @foreach (var sectionInfo in Model.SectionInfo)
            {
                var section = sectionInfo.Model;

                <a class="list-group-item list-group-item-action" href="#@Html.IdFor(sectionInfo.Expression)">
                    @Html.DisplayNameFor(sectionInfo.Expression)
                    <span class="ml-3 float-right">
                        @foreach (var status in (ApprovalStatus[]) Enum.GetValues(typeof(ApprovalStatus)))
                        {
                            var count = section.ApprovalInfo.Count(i => i.Status == status);
                            if (count > 0)
                            {
                                string color;
                                switch (status)
                                {
                                    case ApprovalStatus.NotSubmitted:
                                        color = "secondary";
                                        break;
                                    case ApprovalStatus.NotApplicable:
                                        color = "dark";
                                        break;
                                    case ApprovalStatus.ApprovalPending:
                                        color = "info";
                                        break;
                                    case ApprovalStatus.Approved:
                                        color = "success";
                                        break;
                                    case ApprovalStatus.Rejected:
                                        color = "danger";
                                        break;
                                    default:
                                        throw new ArgumentOutOfRangeException();
                                }

                                <span class="badge badge-pill badge-@(color)">@count</span>
                            }
                        }
                    </span>
                </a>
            }
        </div>
    </div>
    <div class="col">
        <div class="card">
            <div id="form-view" class="card-body" data-spy="scroll" data-target="#section-list" data-offset="18">
                <form id="form" method="post">
                    @foreach (var sectionInfo in Model.SectionInfo)
                    {
                        var section = sectionInfo.Model;

                        <div class="card mb-3" id="@Html.IdFor(sectionInfo.Expression)" data-class="form-section">
                            <div class="card-header d-flex justify-content-between section-header">
                                <h1 class="display-4">@Html.DisplayNameFor(sectionInfo.Expression)</h1>
                            </div>
                            <div class="card-body">
                                @* <h5 class="card-title">@Html.DisplayFor(_ => section.DisplayName)</h5> *@
                                @* <h6 class="card-subtitle mb-4 text-muted">Card subtitle</h6> *@
                                <p class="card-text">@Html.DisplayNameFor(sectionInfo.Expression)</p>
                                @await Html.FormSectionAsync(sectionInfo.Id)
                            </div>
                            <div class="card-footer">
                                <div class="form-group">
                                    @{
                                        var comments = sectionInfo.Id + "." + nameof(ISectionModel.Comments);
                                    }
                                    @Html.Label(comments)
                                    @Html.TextArea(comments, section.Comments, 3, 0, new
                                    {
                                        @class = "form-control form-control-sm",
                                        placeholder = "Leave a comment here if something in this section requires extra explanation.",
                                        data_submit_on = "change"
                                    })
                                </div>

                                @if (section.ApprovalInfo.Any())
                                {
                                    <div class="card">
                                        <div class="card-body bg-light">
                                            <h5 class="card-title">Approval status</h5>
                                            <ul class="list-group mb-3">
                                                @foreach (var approvalInfo in section.ApprovalInfo)
                                                {
                                                    string color;
                                                    string statusText;
                                                    switch (approvalInfo.Status)
                                                    {
                                                        case ApprovalStatus.NotSubmitted:
                                                            color = "secondary";
                                                            statusText = "Not submitted";
                                                            break;
                                                        case ApprovalStatus.NotApplicable:
                                                            color = "dark";
                                                            statusText = "Not applicable";
                                                            break;
                                                        case ApprovalStatus.ApprovalPending:
                                                            color = "info";
                                                            statusText = "Pending";
                                                            break;
                                                        case ApprovalStatus.Approved:
                                                            color = "success";
                                                            statusText = "Approved";
                                                            break;
                                                        case ApprovalStatus.Rejected:
                                                            color = "danger";
                                                            statusText = "Rejected";
                                                            break;
                                                        default:
                                                            throw new ArgumentOutOfRangeException();
                                                    }
                                                    <li class="list-group-item">
                                                        <div class="row align-content-center">
                                                            <div class="col">
                                                                @approvalInfo.AuthorityName
                                                            </div>
                                                            <div class="col">
                                                                <a href="mailto:@(approvalInfo.AuthorityEmail)">@approvalInfo.AuthorityEmail</a>
                                                            </div>
                                                            <div class="col text-right">
                                                                <span class="badge badge-pill badge-@(color)">Status: @statusText</span>
                                                            </div>
                                                        </div>
                                                    </li>
                                                }
                                            </ul>
                                            @if (section.ApprovalInfo.Any(i => i.Status == ApprovalStatus.NotSubmitted || i.Status == ApprovalStatus.Rejected))
                                            {
                                                <a class="btn btn-primary float-right" href="#" role="button" data-toggle="modal" data-target="#request-approval-modal" data-section="@sectionInfo.Id">
                                                    <i class="far fa-thumbs-up"></i>
                                                    Submit for approval
                                                </a>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </form>
            </div>
        </div>
    </div>
</div>

<div id="request-approval-modal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Submit for approval</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to submit this section for approval?
            </div>
            <div class="modal-footer">
                <form method="post" data-url="@Url.Page(null, "RequestApproval", new { section = "__SECTION__" })">
                    <button class="btn btn-primary float-right" type="submit">Submit</button>
                </form>
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <environment include="Development">
        <script src="~/js/form.js" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/form.min.js"></script>
    </environment>
}